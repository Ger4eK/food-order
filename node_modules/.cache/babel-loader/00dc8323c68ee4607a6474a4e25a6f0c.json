{"ast":null,"code":"var _jsxFileName = \"E:\\\\New Era\\\\React-Projects\\\\React - The Complete Guide (incl Hooks, React Router, Redux)\\\\food-order-app\\\\src\\\\components\\\\UI\\\\Input\\\\Input.jsx\";\nimport React from 'react';\nimport classes from './Input.module.css'; //! forwardRef - огортаєм наш кастомний компонент томущо ми не можемо використати ref для кастомного компонента як для простого html елемента\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = /*#__PURE__*/React.forwardRef(_c = (props, ref) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.input,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.input.id,\n      children: props.lable\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", { ...props.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n});\n_c2 = Input;\nexport default Input;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Input$React.forwardRef\");\n$RefreshReg$(_c2, \"Input\");","map":{"version":3,"sources":["E:/New Era/React-Projects/React - The Complete Guide (incl Hooks, React Router, Redux)/food-order-app/src/components/UI/Input/Input.jsx"],"names":["React","classes","Input","forwardRef","props","ref","input","id","lable"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,oBAApB,C,CAEA;;;AAEA,MAAMC,KAAK,gBAAGF,KAAK,CAACG,UAAN,MAAiB,CAACC,KAAD,EAAQC,GAAR,KAAgB;AAC7C,sBACE;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACK,KAAxB;AAAA,4BACE;AAAO,MAAA,OAAO,EAAEF,KAAK,CAACE,KAAN,CAAYC,EAA5B;AAAA,gBAAiCH,KAAK,CAACI;AAAvC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,sBAAWJ,KAAK,CAACE;AAAjB;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAPa,CAAd;MAAMJ,K;AASN,eAAeA,KAAf","sourcesContent":["import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\n//! forwardRef - огортаєм наш кастомний компонент томущо ми не можемо використати ref для кастомного компонента як для простого html елемента\r\n\r\nconst Input = React.forwardRef((props, ref) => {\r\n  return (\r\n    <div className={classes.input}>\r\n      <label htmlFor={props.input.id}>{props.lable}</label>\r\n      <input {...props.input} />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Input;\r\n"]},"metadata":{},"sourceType":"module"}