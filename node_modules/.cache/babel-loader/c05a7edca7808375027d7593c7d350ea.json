{"ast":null,"code":"var _jsxFileName = \"E:\\\\New Era\\\\React-Projects\\\\React - The Complete Guide (incl Hooks, React Router, Redux)\\\\food-order-app\\\\src\\\\components\\\\Meals\\\\AvailableMeals\\\\AvailableMeals.jsx\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport Card from '../../UI/Card/Card';\nimport MealItem from '../MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_MEALS = [{\n  id: 'm1',\n  name: 'Sushi',\n  description: 'Finest fish and veggies',\n  price: 22.99\n}, {\n  id: 'm2',\n  name: 'Schnitzel',\n  description: 'A german specialty!',\n  price: 16.5\n}, {\n  id: 'm3',\n  name: 'Barbecue Burger',\n  description: 'American, raw, meaty',\n  price: 12.99\n}, {\n  id: 'm4',\n  name: 'Green Bowl',\n  description: 'Healthy...and green...',\n  price: 18.99\n}];\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const fetchMealsData = async () => {\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('https://react-http-9066a-default-rtdb.firebaseio.com/meals.json');\n      const data = await response.json();\n      const loadedMeals = [];\n\n      for (const key in data) {\n        loadedMeals.push({\n          id: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price\n        });\n      }\n\n      console.log(loadedMeals);\n      setMeals(loadedMeals);\n    } catch (error) {}\n\n    setIsLoading(false);\n  };\n\n  useEffect(() => {\n    fetchMealsData();\n  }, []);\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: classes.isLoading,\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"Iiz9r13wHP3oUKY8Pc8nCUik7ZA=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["E:/New Era/React-Projects/React - The Complete Guide (incl Hooks, React Router, Redux)/food-order-app/src/components/Meals/AvailableMeals/AvailableMeals.jsx"],"names":["React","useState","useEffect","Card","MealItem","classes","DUMMY_MEALS","id","name","description","price","AvailableMeals","meals","setMeals","isLoading","setIsLoading","error","setError","fetchMealsData","response","fetch","data","json","loadedMeals","key","push","console","log","mealsList","map","meal"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from 'react';\r\nimport Card from '../../UI/Card/Card';\r\nimport MealItem from '../MealItem/MealItem';\r\nimport classes from './AvailableMeals.module.css';\r\n\r\nconst DUMMY_MEALS = [\r\n  {\r\n    id: 'm1',\r\n    name: 'Sushi',\r\n    description: 'Finest fish and veggies',\r\n    price: 22.99,\r\n  },\r\n  {\r\n    id: 'm2',\r\n    name: 'Schnitzel',\r\n    description: 'A german specialty!',\r\n    price: 16.5,\r\n  },\r\n  {\r\n    id: 'm3',\r\n    name: 'Barbecue Burger',\r\n    description: 'American, raw, meaty',\r\n    price: 12.99,\r\n  },\r\n  {\r\n    id: 'm4',\r\n    name: 'Green Bowl',\r\n    description: 'Healthy...and green...',\r\n    price: 18.99,\r\n  },\r\n];\r\n\r\nconst AvailableMeals = () => {\r\n  const [meals, setMeals] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchMealsData = async () => {\r\n    setIsLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await fetch(\r\n        'https://react-http-9066a-default-rtdb.firebaseio.com/meals.json'\r\n      );\r\n      const data = await response.json();\r\n      const loadedMeals = [];\r\n      for (const key in data) {\r\n        loadedMeals.push({\r\n          id: key,\r\n          name: data[key].name,\r\n          description: data[key].description,\r\n          price: data[key].price,\r\n        });\r\n      }\r\n      console.log(loadedMeals);\r\n      setMeals(loadedMeals);\r\n    } catch (error) {\r\n      \r\n    }\r\n    \r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchMealsData();\r\n  }, []);\r\n\r\n  const mealsList = meals.map((meal) => (\r\n    <MealItem\r\n      id={meal.id}\r\n      key={meal.id}\r\n      name={meal.name}\r\n      description={meal.description}\r\n      price={meal.price}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <section className={classes.meals}>\r\n      <Card>\r\n        {isLoading && <p className={classes.isLoading}>Loading...</p>}\r\n        <ul>{mealsList}</ul>\r\n      </Card>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default AvailableMeals;\r\n"]},"metadata":{},"sourceType":"module"}